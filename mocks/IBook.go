// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entities "github.com/ahmedshakshak/books-recommender/entities"
	mock "github.com/stretchr/testify/mock"
)

// IBook is an autogenerated mock type for the IBook type
type IBook struct {
	mock.Mock
}

// RecommendBooks provides a mock function with given fields:
func (_m *IBook) RecommendBooks() ([]*entities.Book, error) {
	ret := _m.Called()

	var r0 []*entities.Book
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]*entities.Book, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []*entities.Book); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.Book)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIBook interface {
	mock.TestingT
	Cleanup(func())
}

// NewIBook creates a new instance of IBook. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBook(t mockConstructorTestingTNewIBook) *IBook {
	mock := &IBook{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
